#non-linear regression model
DALA <- c(0,1,3,7,10)
y <- c(19.61,11.08,12.63,12.30,3.86)
newd <- data.frame(y,C=rep(27.46419,5),D=c(0,1,3,7,10))
m1 <- nls(y~C*NSD*exp(-k*D), newd, start=list(NSD=0.2,k=0.31))
plot(y ~ DALA)
lines(DALA, fitted(m), lty = 2, col = "red", lwd = 2)


#m2 <- nls(y~C*NSD*(g*exp(-k1*D)+(1-g)*exp(-(k1+kdif)*D)), newd, start=list(k1=0.02,kdif=30,g=0.7,NSD=0.7), algorithm="port", lower=c(0,0.00001,0,0), upper=c(100,100,1,1))
#for m2, use least-squares optimization instead
obj <- function(Mpara) {
  k1 <- Mpara[1]
  kdif <- Mpara[2]
  g <- Mpara[3]
  NSD <- Mpara[4]
  pred<-newd$C*NSD*(g*exp(-k1*newd$D)+(1-g)*exp(-(k1+kdif)*newd$D))
  return(sum((y - pred) ^ 2))
}
x1 <- c(0.0774, 0.9829, 0.8216, 0.429)
fit <- neldermead(x1,
                  obj,
                  lower = c(0, 0, 0, 0),
                  upper = c(100, 100, 1, 1))
pred_k1 <- fit$par[1]
pred_kdif <- fit$par[2]
pred_g <- fit$par[3]
pred_NSD <- fit$par[4]
yhat<-newd$C*pred_NSD*(pred_g*exp(-pred_k1*newd$D)+(1-pred_g)*exp(-(pred_k1+pred_kdif)*newd$D))
# plot(y ~ DALA)
lines(DALA, yhat, lty = 2, col = "blue", lwd = 2)




fo <- y~ cbind(C*exp(-D*(k1*D)), C*(exp(-D*(k1*D))-exp(-D*(k1+exp(kdif))*D)))
nls(fo, newd, start=list(k1=0.02,kdif=-1), alg = "plinear")


fo <- y~ cbind(C*exp(-D*(exp(k1)*D)), C*(exp(-D*(exp(k1)*D))-exp(-D*(exp(k1)+exp(kdif))*D)))
st2<- list(k1=-2,kdif=-3)
m2<-nls(fo, data=newd,start = st2, alg ="plinear")
k1<- as.numeric(exp(coef(m2)[1]))
k2<- as.numeric(exp(coef(m2)[1])+exp(coef(m2)[2]))
NSD <- as.numeric(coef(m2)[3])
g<- as.numeric(coef(m2)[4]/ coef(m2)[3])
k1;k2;g;NSD



library('minpack.lm')
myfun<- function(k1,kdif,g,NSD) {
  pred<-newd$C*NSD*(g*exp(-k1*newd$D)+(1-g)*exp(-(k1+kdif)*newd$D))
  return(pred)
}
myfit=nlsLM(y~myfun(k1,kdif,g,NSD),data=newd,start=list(k1=0.06,kdif=34,g=0.69,NSD=0.71),
            lower = c(0, 0.0001, 0.01, 0.01), upper = c(100, 100, 1, 1))



library(nls2)
fo <- y~ cbind(C*exp(-D*(exp(k1)*D)), C*(exp(-D*(exp(k1)*D))-exp(-D*(exp(k1)+exp(kdif))*D)))
st2<- list(k1=-2,kdif=-3)
m2<-nls2(fo, data=newd,start = st2, algorithm ="plinear",control = nls.control(warnOnly = TRUE))







############example for nls with plinear alg
Data2 <-
  structure(list(D = c(0L, 0L, 0L, 0L, 5L, 5L, 5L, 5L,
                       10L, 10L, 10L, 10L, 15L, 15L, 15L, 15L, 20L, 20L, 20L, 20L),
                 Y = c(10.8, 10.7, 8.4, 8.5, 8, 8, 8, 7.9, 7.9, 7.2,
                       7.8, 7.2, 6.6, 6.5, 6.5, 6.4, 2.2, 4.5, 4.2, 6.2)), .Names = c("D",
                                                                                      "Y"), class = "data.frame", row.names = 21:40)

fm2  <-
  nls(
    formula=Y~w*(1-(i*D/(100*(1+i*D/A))))
    , data=Data2
    , start=list(w=13, i=3, A=80)
    , algorithm="port"
  )


